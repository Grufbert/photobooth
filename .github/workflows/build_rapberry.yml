name: build-raspberry

on:
#  push:
#    branches: [ dev ]
#  pull_request:
#    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Update system
        run: |
          sudo apt update
          sudo apt-get install software-properties-common
          sudo apt-add-repository universe
          sudo apt update
          sudo apt upgrade -y
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: true
          path: photobooth
      - name: Checkout pi-gen
        uses: actions/checkout@v3
        with:
          repository: RPI-Distro/pi-gen
          path: pi-gen
      - name: Install pi-gen dependencies
        run: |
          cat pi-gen/depends | rev | cut -d: -f1 | rev | xargs sudo apt install -y
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y coreutils quilt parted qemu-utils qemu-user-static debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc
      - name: Run pi-gen
        run: |
          chmod +x pi-gen/build.sh
          sudo pi-gen/build.sh -c photobooth/custom-pi-config
      - name: Last Job
        run: |
          pwd
          ls -la
          ls -la pi-gen
          ls -la photobooth
#      - name: Compress
#        run: |
#          cd vendor/CustomUbuntu/scripts
#          gzip photobooth.iso
#      - name: Publish ISO
#        uses: actions/upload-artifact@v2
#        with:
#          name: photobooth.iso.gz
#          path: vendor/CustomUbuntu/scripts/photobooth.iso.gz
#      - name: deploy file
#        uses: wlixcc/SFTP-Deploy-Action@v1.0
#        with:
#          username: ${{ secrets.SSH_USER }} 
#          server: ${{ secrets.SSH_SERVER }} 
#          ssh_private_key: ${{ secrets.SSH_KEY }} 
#          local_path: 'vendor/CustomUbuntu/scripts/photobooth.iso.gz'
#          remote_path: './'
#          args: '-o ConnectTimeout=5'
